"""Add status column to landing_leads

Revision ID: c48c9aa2f56e
Revises: a5bef46e22a7
Create Date: 2025-09-05 19:22:16.318091

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c48c9aa2f56e'
down_revision: Union[str, None] = 'a5bef46e22a7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('buen_contribuyentes',
    sa.Column('ruc', sa.String(length=11), nullable=False),
    sa.Column('razon_social', sa.String(length=255), nullable=False),
    sa.Column('fecha_incorporacion', sa.Date(), nullable=False),
    sa.Column('numero_resolucion', sa.String(length=100), nullable=True),
    sa.Column('observaciones', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('ruc')
    )
    op.create_index(op.f('ix_buen_contribuyentes_ruc'), 'buen_contribuyentes', ['ruc'], unique=False)
    op.create_table('sunat_schedules',
    sa.Column('tax_period', sa.String(length=7), nullable=False),
    sa.Column('last_ruc_digit', sa.String(length=1), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('contributor_group', postgresql.ENUM('general', 'buen_contribuyente', name='contributorgroup'), server_default=sa.text("'general'::contributorgroup"), nullable=False),
    sa.Column('publication_date', sa.Date(), nullable=True),
    sa.Column('legal_base_document', sa.String(length=255), nullable=True),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('last_updated_by_user_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['last_updated_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tax_period', 'last_ruc_digit', 'contributor_group', name='_period_ruc_digit_group_uc')
    )
    op.create_index(op.f('ix_sunat_schedules_id'), 'sunat_schedules', ['id'], unique=False)
    op.create_index(op.f('ix_sunat_schedules_last_ruc_digit'), 'sunat_schedules', ['last_ruc_digit'], unique=False)
    op.create_index(op.f('ix_sunat_schedules_tax_period'), 'sunat_schedules', ['tax_period'], unique=False)
    op.add_column('service_tariffs', sa.Column('service_name', sa.String(length=255), nullable=False))
    op.add_column('service_tariffs', sa.Column('currency', sa.String(length=3), nullable=False))
    op.add_column('service_tariffs', sa.Column('start_date', sa.Date(), nullable=False))
    op.add_column('service_tariffs', sa.Column('end_date', sa.Date(), nullable=True))
    op.add_column('service_tariffs', sa.Column('observations', sa.Text(), nullable=True))
    op.add_column('service_tariffs', sa.Column('created_by_user_id', sa.Integer(), nullable=False))
    op.add_column('service_tariffs', sa.Column('last_updated_by_user_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_service_tariffs_id'), 'service_tariffs', ['id'], unique=False)
    op.create_index(op.f('ix_service_tariffs_service_name'), 'service_tariffs', ['service_name'], unique=False)
    op.drop_constraint(op.f('service_tariffs_service_type_id_fkey'), 'service_tariffs', type_='foreignkey')
    op.create_foreign_key(None, 'service_tariffs', 'users', ['created_by_user_id'], ['id'])
    op.create_foreign_key(None, 'service_tariffs', 'users', ['last_updated_by_user_id'], ['id'])
    op.drop_column('service_tariffs', 'service_type_id')
    op.drop_column('service_tariffs', 'name')
    op.alter_column('users', 'last_platform_login_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'last_platform_login_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.add_column('service_tariffs', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('service_tariffs', sa.Column('service_type_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'service_tariffs', type_='foreignkey')
    op.drop_constraint(None, 'service_tariffs', type_='foreignkey')
    op.create_foreign_key(op.f('service_tariffs_service_type_id_fkey'), 'service_tariffs', 'service_types', ['service_type_id'], ['id'])
    op.drop_index(op.f('ix_service_tariffs_service_name'), table_name='service_tariffs')
    op.drop_index(op.f('ix_service_tariffs_id'), table_name='service_tariffs')
    op.drop_column('service_tariffs', 'last_updated_by_user_id')
    op.drop_column('service_tariffs', 'created_by_user_id')
    op.drop_column('service_tariffs', 'observations')
    op.drop_column('service_tariffs', 'end_date')
    op.drop_column('service_tariffs', 'start_date')
    op.drop_column('service_tariffs', 'currency')
    op.drop_column('service_tariffs', 'service_name')
    op.drop_index(op.f('ix_sunat_schedules_tax_period'), table_name='sunat_schedules')
    op.drop_index(op.f('ix_sunat_schedules_last_ruc_digit'), table_name='sunat_schedules')
    op.drop_index(op.f('ix_sunat_schedules_id'), table_name='sunat_schedules')
    op.drop_table('sunat_schedules')
    op.drop_index(op.f('ix_buen_contribuyentes_ruc'), table_name='buen_contribuyentes')
    op.drop_table('buen_contribuyentes')
    # ### end Alembic commands ###
