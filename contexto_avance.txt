Contexto para Mañana: Resumen del Estado del Proyecto YASTA (15 de Junio)
Objetivo Logrado Hoy:
Se ha resuelto el problema crítico de autenticación en producción. El flujo de login con Google ahora funciona y la cookie de sesión (JWT) se establece correctamente. La causa raíz era una columna (sol_validation_status) faltante en la base de datos de producción, que impedía la consulta de usuarios y rompía el callback de OAuth. El problema se solucionó aplicando la migración de base de datos manualmente.
Estado Actual y Siguiente Bloqueo:
Flujo de Redirección Corregido: Se implementó una lógica de redirección post-login robusta que se basa explícitamente en el user.role.
role=authenticated -> /onboarding
role=client_freemium -> /dashboard/client
Esto ha sido verificado manualmente cambiando un rol en la base de datos, y funciona como se espera.
Problema Principal Pendiente: El mecanismo para que un usuario pase de authenticated a client_freemium está roto. El formulario o la acción designada para esta transición no funciona en producción. Esto impide que los usuarios nuevos puedan usar el servicio después del onboarding y es nuestra máxima prioridad técnica.
Problema Secundario Emergente: Se ha observado un error intermitente (/onboarding#auth-general-error) en la página de onboarding, sugiriendo que una petición de datos en segundo plano podría estar fallando en esa página.
Tareas Pendientes Técnicas:
Depurar el Formulario de Conversión a Freemium: Utilizar las herramientas de red del navegador para identificar la petición de API que falla al enviar el formulario y analizar el mensaje de error que devuelve el servidor. Esta es la primera tarea para mañana.
Investigar el Error de Onboarding: Si el error persiste, aplicar la misma técnica de depuración de red en la página /onboarding para encontrar la petición fallida.
Discusión Estratégica y de Producto (Tareas Pendientes de Diseño de Flujo)
Excelente que ya estés pensando en los siguientes pasos funcionales. Estos son los puntos clave a definir:
A. Canales de Comunicación Usuario -> Yasta:
Consultas y Soporte:
Opción 1 (Simple): Un enlace mailto: (soporte@yasta.cloud) y/o un número de WhatsApp. Rápido de implementar, pero difícil de escalar y rastrear.
Opción 2 (Integrado): Un pequeño formulario de contacto en la web que envíe un correo electrónico a nuestro equipo (o cree un ticket en un sistema simple como Trello/Notion vía API).
Opción 3 (Avanzada): Un widget de chat en vivo (Crisp, Tawk.to) que permita una comunicación más directa. Muchos tienen planes gratuitos generosos.
Periodo Tributario Inicial:
Esto es un dato crítico para el onboarding. Debe ser un campo obligatorio en el formulario de onboarding/conversión.
Implementación: Un campo de formulario tipo "mes/año" (ej. MM/YYYY) o dos desplegables (Mes, Año). Se debe guardar en la base de datos asociado al perfil del cliente.
Recepción de Vouchers de Pago (Yape/Plin):
Análisis de Riesgo vs. Esfuerzo: Tu análisis es perfecto. La validación por OCR/LLM de un voucher es costosa en recursos y frágil ante la manipulación. Para una tarifa económica, el riesgo de fraude es bajo y el costo de una validación manual es mucho menor.
Propuesta de Flujo (MVP - Producto Mínimo Viable):
a. El usuario realiza el pago.
b. En el formulario, se le presenta un campo para subir la imagen del voucher y otro para ingresar el número de operación.
c. Al enviar, el sistema guarda la imagen y marca la cuenta del usuario como "pago_pendiente_de_verificacion".
d. Un administrador (tú) recibe una notificación, revisa la imagen y el monto en la cuenta de Yape/Plin y, con un clic en un panel de administración simple, aprueba el pago, cambiando el rol del usuario a client_paid.
e. Este flujo minimiza el riesgo de fraude y es muy barato de implementar y operar al principio.
B. Canales de Comunicación Yasta -> Usuario:
Push Notifications y SWAs (Single Web Apps):
Estás en lo cierto. Para enviar notificaciones push a un navegador (móvil o de escritorio), tu sitio web necesita comportarse como una Progressive Web App (PWA).
¿Qué es una PWA? No es un framework distinto, sino un conjunto de tecnologías web (Service Worker, Manifest.json) que le dan a tu web "superpoderes" como funcionar offline, ser "instalable" en la pantalla de inicio y, crucialmente, recibir notificaciones push.
Alternativa: El correo electrónico. Es menos inmediato pero universal y 100% fiable. Una combinación de ambos es ideal: emails para notificaciones importantes (facturas, cambios de estado) y push notifications para recordatorios en tiempo real ("Tu declaración está lista").